---
- name: create ec2 instance
  amazon.aws.ec2_instance:
    key_name: "{{ instance_key_name }}"
    instance_type: "{{ instance_type }}"
    instance_role: "{{instance_role}}"
    image:
      id: "{{ ami_id }}"
    wait: True
    network:
      assign_public_ip: "{{ is_public_ip_needed }}"
    vpc_subnet_id: "{{ vpc_subnet_id }}"
    security_groups: "{{ security_group_ids }}"
    filters:
      "tag:Name": "{{ instance_name }}"
      image-id: "{{ ami_id }}"
      instance-state-name: running
      network-interface.subnet-id: "{{ vpc_subnet_id }}"
    tags: "{{ base_tags | combine({'Name': instance_name, 'Beat': instance_tags.celery_beat | default(false, true), 'Gunicorn': instance_tags.gunicorn | default(false, true), 'Celery': instance_tags.celery | default(false, true), 'Faust': instance_tags.faust | default(false, true), 'Kafka': instance_tags.kafka | default(false, true) }) }}"
    region: "{{ instance_region }}"
    volumes:
      - device_name: /dev/sda1
        ebs:
          volume_type: "{{ root_volume_type }}"
          volume_size: "{{ root_volume_size|int }}"
  register: ec2

- name: Attach Volume
  amazon.aws.ec2_vol:
    instance: "{{ attach_new_volumes.instance_id }}"
    volume_size: "{{ additional_volume_size|int }}"
    volume_type: "{{ additional_volume_type }}"
    device_name: "{{ additional_volume_device_name }}"
  loop: "{{ ec2.instances }}"
  loop_control:
    loop_var: attach_new_volumes
  when: additional_volume_needed

- name: Gather information about instance with a tag key Name and value
  amazon.aws.ec2_instance_info:
    filters:
      "tag:Name": "{{ instance_name }}"
      instance-state-name: ["running"]
  register: ec2_object

- name: Add the instance to host group
  ansible.builtin.add_host:
    hostname: "{{ curr_instance.private_ip_address }}"
    ansible_connection: ssh
    ansible_user: ubuntu
    groups: "{{instance_group_name}}"
  loop: "{{ ec2_object.instances }}"
  loop_control:
    loop_var: curr_instance
